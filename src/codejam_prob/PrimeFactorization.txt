Given a number, return a prime factorization of that number
in a product form.

Input:
1:100
2:42
3:7007

Output:
1:2^2*5^2       -> 2x2 x 5x5
2:2*3*7         -> 2x2x2 x 7
3:7^2*11*13     -> 

Find the prime factorization of 7007.
Iteratively divide by increasing prime
Return false if the result is not an integer.
Otherwise return true if the result is an integer.
If the result is an integer, repeat the loop comparing
the result with the primes array. 
Repeat the steps until both the result divides one of the
primes equals 1.

2|7007 (7007/2) false
3|7007          false
5|7007          false
7|7007 = 1001   true    
get result; get which prime -> store in an array

2|1001          false
3|1001          false
5|1001          false
7|1001 = 143    true    
get result; get which prime -> store in an array

2|143           false
3|143           false
5|143           false
7|143           false
11|143 = 13     true
get result; get which prime -> store in an array

2|13            false
3|13            false
5|13            false
7|13            false
11|13           false
13|13 = 1        true
if the result equals 1 then stop
get result; get which prime -> store in an array


          

Use the primer numbers less than 100 
[2, 3, 5, 7, 11, 
13, 17, 19, 23, 29, 
31, 37, 41, 43, 47, 
53, 59, 61, 67, 71, 
73, 79, 83, 89, 97]

